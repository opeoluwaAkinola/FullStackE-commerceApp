services:
  user_service:
    build: ./backend/user_service
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DSN=${USER_DB}
      - SECRET_KEY=your-secret-key-here
    depends_on:
      - postgresql

  product_service:
    build: ./backend/product_service
    ports:
      - "8001:8000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
    depends_on:
      - mongodb

  order_service:
    build: ./backend/order_service
    ports:
      - "8002:8000"
    environment:
      - POSTGRES_DSN=${ORDER_DB}
      - USER_SERVICE_URL=http://user_service:8000
      - PRODUCT_SERVICE_URL=http://product_service:8000
      - PAYMENT_SERVICE_URL=http://payment_service:8000
    depends_on:
      - postgresql
      - user_service
      - product_service

  payment_service:
    build: ./backend/payment_service
    ports:
      - "8003:8000"
    environment:
      - POSTGRES_DSN=${PAYMENT_DB}
      - ORDER_SERVICE_URL=http://order_service:8000
      - NOTIFICATION_SERVICE_URL=http://notification_service:8000
    depends_on:
      - postgresql
      - notification_service

  cart_service:
    build: ./backend/cart_service
    ports:
      - "8004:8000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - PRODUCT_SERVICE_URL=http://product_service:8000
      - USER_SERVICE_URL=http://user_service:8000
    depends_on:
      - mongodb
      - product_service
      - user_service

  inventory_service:
    build: ./backend/inventory_service
    ports:
      - "8005:8000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - POSTGRES_DSN=${INVENTORY_DB}
    depends_on:
      - mongodb
      - postgresql

  notification_service:
    build: ./backend/notification_service
    ports:
      - "8006:8000"
    environment:
      - POSTGRES_DSN=${NOTIFICATION_DB}
    depends_on:
      - postgresql

  postgresql:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_MULTIPLE_DATABASES}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh

 
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:

      PGADMIN_DEFAULT_EMAIL: opiiiakinola@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Richard1oluwa863
    ports:
      - "5050:80"
    volumes:
      - pg_data:/var/lib/pgadmin
    
  # MongoDB for product catalog
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - user_service
  #     - product_service
  #     - order_service
  #     - payment_service
  #     - cart_service
  #     - inventory_service
  #     - notification_service

  frontend:
    build:
      context: ./Frontend/EcommerceProject
    ports:
      - "5173:5173"  # Expose Vite dev server
    environment:
      - NODE_ENV=development
      - VITE_USER_SERVICE_URL=http://localhost:8000
      - VITE_PRODUCT_SERVICE_URL=http://localhost:8001
      - VITE_ORDER_SERVICE_URL=http://localhost:8002
      - VITE_PAYMENT_SERVICE_URL=http://localhost:8003
      - VITE_CART_SERVICE_URL=http://localhost:8004
      - VITE_INVENTORY_SERVICE_URL=http://localhost:8005
      - VITE_NOTIFICATION_SERVICE_URL=http://localhost:8006
    volumes:
      - ./Frontend/EcommerceProject:/app  # Mount source for live reload
      - /app/node_modules  # Exclude node_modules from mount
    depends_on:
      - user_service
      - product_service
      - order_service
      - payment_service
      - cart_service
      - inventory_service
      - notification_service
    # Optionally, you can add nginx as a dependency if you want nginx to wait for frontend
    # - nginx

volumes:
  mongo_data:
  pg_data:
  postgres_data: